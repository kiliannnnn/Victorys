---
export const prerender = false;

import { supabase, supabaseAdmin } from "@/lib/supabase";
import Layout from "@/layouts/HTML.astro";
import Chatbox from "@/components/Chatbox";

const { id } = Astro.params;

let { data: duel } = await supabase
  .from('duels')
  .select("*")
  .eq('id', id)
  .single()

if (!duel) {
    return Astro.redirect('/404');
}

const accessToken = Astro.cookies.get("sb-access-token");
const refreshToken = Astro.cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
    return Astro.redirect("/signin");
}

let session;
try {
    session = await supabase.auth.setSession({
        refresh_token: refreshToken.value,
        access_token: accessToken.value,
    });
    if (session.error) {
        Astro.cookies.delete("sb-access-token", { path: "/" });
        Astro.cookies.delete("sb-refresh-token", { path: "/" });
        return Astro.redirect("/signin");
    }
} catch (error) {
    Astro.cookies.delete("sb-access-token", { path: "/" });
    Astro.cookies.delete("sb-refresh-token", { path: "/" });
    return Astro.redirect("/signin");
}

const users = (await supabaseAdmin?.auth.admin.listUsers())?.data?.users || [];
const { data: { user } } = await supabase.auth.getUser();
if (!user) {
    return Astro.redirect("/signin");
}
const filteredUsers = users.filter(u => u.id !== user.id);

let defaultTarget = null;

if (duel.player_1 === user.id) {
    const response = await supabaseAdmin?.auth.admin.getUserById(duel.player_2);
    if (response?.data) {
        defaultTarget = response.data.user;
    }
} else if (duel.player_2 === user.id) {
    const response = await supabaseAdmin?.auth.admin.getUserById(duel.player_1);
    if (response?.data) {
        defaultTarget = response.data.user;
    }
} else {
    return Astro.redirect("/404");
}

---

<Layout title="duel">
    <Chatbox client:load users={filteredUsers} senderUser={user} defaultTarget={defaultTarget}/>
</Layout>