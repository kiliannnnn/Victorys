---
export const prerender = false;

import { supabase, supabaseAdmin } from "@/lib/supabase";
import Layout from "@/layouts/HTML.astro";
import Message from "@/components/Message.astro";

const accessToken = Astro.cookies.get("sb-access-token");
const refreshToken = Astro.cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
    return Astro.redirect("/signin");
}

let session;
try {
    session = await supabase.auth.setSession({
        refresh_token: refreshToken.value,
        access_token: accessToken.value,
    });
    if (session.error) {
        Astro.cookies.delete("sb-access-token", { path: "/" });
        Astro.cookies.delete("sb-refresh-token", { path: "/" });
        return Astro.redirect("/signin");
    }
} catch (error) {
    Astro.cookies.delete("sb-access-token", { path: "/" });
    Astro.cookies.delete("sb-refresh-token", { path: "/" });
    return Astro.redirect("/signin");
}

const { data: { users } } = await supabaseAdmin.auth.admin.listUsers();
const currentUser = await supabase.auth.getUser();

var { data } = await supabase
  .from('messages')
  .select()
  .eq('sender', currentUser.data.user?.id)
const fromCurrentUser = data;
var { data } = await supabase
  .from('messages')
  .select()
  .eq('target', currentUser.data.user?.id)
const toCurrentUser = data;

const messages = fromCurrentUser?.concat(toCurrentUser);
messages?.sort((a, b) => new Date(a.created).getTime() - new Date(b.created).getTime());

const handleInserts = (payload: any) => {
  console.log('Change received!', payload)
}

supabase
  .channel('messages')
  .on('postgres_changes', { event: 'INSERT', schema: 'public', table: 'messages' }, handleInserts)
  .subscribe()
---

<Layout title="Chat">
    <div class="bg-gray-100 dark:bg-gray-900 min-h-screen">
        <div class="container mx-auto py-8 px-4 lg:px-8">
            <div class="bg-white dark:bg-gray-800 shadow-md rounded-lg p-6 flex flex-col md:flex-row gap-6">
                <div class="w-full md:w-1/5 bg-gray-200 dark:bg-gray-700 rounded-lg p-4">
                    <h2 class="text-lg font-semibold text-gray-800 dark:text-gray-100 mb-4">Users</h2>
                    <ul class="space-y-3">
                        {users.map((user) => (
                            <li>
                                <button
                                    onclick={`selectUser('${user.id}')`}
                                    class="block w-full text-left text-gray-700 dark:text-gray-200 hover:bg-gray-300 dark:hover:bg-gray-600 rounded-lg"
                                >
                                    {user.email}
                                </button>
                            </li>
                        ))}
                    </ul>
                </div>
                <div class="flex-1 bg-gray-100 dark:bg-gray-900 rounded-lg p-6 flex flex-col">
                    <div id="chat-header" class="mb-6">
                        <h2 class="text-xl font-bold text-gray-800 dark:text-gray-100" id="selected-user">
                            Select a user to chat
                        </h2>
                    </div>
                    <div id="chat-box" class="flex-1 overflow-y-auto space-y-4">
                        {messages?.map((message) => (
                            <Message message={message} currentUser={currentUser} />
                        ))}
                    </div>
                    <form id="message-form" class="mt-6 flex">
                        <input
                            type="text"
                            id="message-input"
                            placeholder="Type a message..."
                            class="flex-1 px-4 py-2 rounded-l-lg border border-gray-300 focus:ring focus:ring-blue-500 focus:outline-none"
                        />
                        <button
                            type="submit"
                            class="px-4 py-2 bg-blue-600 text-white rounded-r-lg hover:bg-blue-700"
                        >
                            Send
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</Layout>
