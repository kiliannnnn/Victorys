---
export const prerender = false;

import Theme from "@/components/Theme.astro";
import { supabase } from "@/lib/supabase";
import Chatbox from "@/components/Chatbox";

const accessToken = Astro.cookies.get("sb-access-token");
let user = null;

if (accessToken) {
    const { data } = await supabase.auth.getUser(accessToken.value);
    if (data?.user) {
        user = data.user;
    }
}
---

<header class="bg-white dark:bg-gray-800 shadow-md p-4">
    <div class="container mx-auto flex items-center justify-between">
        <a href="/" class="text-2xl font-bold text-gray-800 dark:text-white">Victorys</a>
        <nav class="flex space-x-6">
            <a href="duels" class="text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white">Duels</a>
            <a href="tournaments" class="text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white">Tournaments</a>
        </nav>
        
        <div class="flex items-center space-x-4">
            <Theme />

            { user ? 
            <div class="relative">
                <button id="btn-chatbox" class="text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white focus:outline-none">
                    <svg class="w-6 h-6 text-gray-900 dark:text-gray-100" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M12 2a10 10 0 100 20c1.657 0 3.225-.406 4.615-1.167L21 21l-1.833-4.615A9.964 9.964 0 0012 22a10 10 0 100-20zm-4 7h8v2H8V9zm0 4h5v2H8v-2z" />
                    </svg>
                </button>
                <div id="chatbox" class="absolute right-0 mt-2 w-96 max-w-lg sm:max-w-[50vw] bg-white dark:bg-gray-700 rounded-md shadow-lg hidden z-50">
                    <Chatbox client:load currentUser={user}/>
                </div>
            </div>
            : ''}

            <div class="relative">
                <button id="profile-dropdown" class="text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white focus:outline-none">
                    <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M10 10a4 4 0 100-8 4 4 0 000 8zm0 2a8 8 0 00-7.446 4.032 1 1 0 001.732 1.024A6 6 0 0110 14a6 6 0 015.714 3.056 1 1 0 001.732-1.024A8 8 0 0010 12z"></path>
                    </svg>
                </button>
                <div id="dropdown-menu" class="absolute right-0 mt-2 w-48 bg-white dark:bg-gray-700 rounded-md shadow-lg hidden">
                    { user ? 
                        <a href="/profile" class="block px-4 py-2 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-600">Profile</a>
                        <a href="/api/auth/signout" class="block px-4 py-2 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-600">Logout</a>
                        :
                        <a href="/signin" class="block px-4 py-2 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-600">Login</a>
                        <a href="/register" class="block px-4 py-2 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-600">Register</a>
                    }
                </div>
            </div>
        </div>
    </div>
</header>

<script>
    const chatboxToggle = document.getElementById("btn-chatbox");
    const chatbox = document.getElementById("chatbox");

    chatboxToggle?.addEventListener("click", () => {
        if (chatbox) {
            chatbox.classList.toggle("hidden");
        }
    });

    document.addEventListener("click", (e) => {
        if (
            chatboxToggle && 
            !chatboxToggle.contains(e.target as Node) &&
            chatbox &&
            !chatbox.contains(e.target as Node)
        ) {
            chatbox.classList.add("hidden");
        }
    });
</script>

<script>
    const profileDropdown = document.getElementById("profile-dropdown");
    const dropdownMenu = document.getElementById("dropdown-menu");
    
    if (profileDropdown) {
        profileDropdown.addEventListener("click", () => {
            if (dropdownMenu) {
                dropdownMenu.classList.toggle("hidden");
            }
        });
    }
    
    document.addEventListener("click", (e) => {
        if (
        profileDropdown && 
        !profileDropdown.contains(e.target as Node) &&
        dropdownMenu &&
        !dropdownMenu.contains(e.target as Node)
        ) {
            dropdownMenu.classList.add("hidden");
        }
    });
</script>
